{"version":3,"sources":["components/PhoneBook/Person.js","components/PhoneBook/Persons.js","components/PhoneBook/NewPersonForm.js","components/PhoneBook/NameFilter.js","components/PhoneBook/Notification.js","services/phonebook.js","components/PhoneBook/App.js","index.js"],"names":["Person","_ref","person","onClick","react_default","a","createElement","name","number","type","value","Persons","persons","removePersonById","map","p","PhoneBook_Person","key","id","NewPersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","Fragment","onSubmit","onChange","NameFilter","changeValue","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Object","objectSpread","baseUrl","phonebook","axios","get","then","response","data","newObject","post","put","concat","delete","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","nameFilter","setNameFilter","_useState9","_useState10","setMessage","_useState11","_useState12","error","setError","useEffect","phoneBookService","initialPersons","pushMessage","msg","timeoutMs","arguments","length","undefined","setTimeout","pushError","err","PhoneBook_Notification","PhoneBook_NameFilter","event","target","PhoneBook_NewPersonForm","preventDefault","find","window","confirm","changedPerson","returnedPerson","catch","filter","PhoneBook_Persons","toLowerCase","includes","personsCopy","slice","idx","indexOf","splice","ReactDOM","render","PhoneBook_App","document","getElementById"],"mappings":"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","file":"static/js/main.afb5f5d0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, onClick}) => {\n  return (\n    <div>\n      {person.name}: {person.number} <input type='button' value='poista' onClick={onClick} />\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, removePersonById}) => {\n  const elems = () => persons.map(p =>\n    <Person key={p.name} person={p} onClick={() => removePersonById(p.id)} />\n  )\n  return (\n    <div>\n      <h2>Luettelo</h2>\n      {elems()}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst NewPersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => (\n  <>\n  <h2>Lisää uusi</h2>\n  <form onSubmit={addPerson}>\n    <div>\n      nimi: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      numero: <input value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n  </>\n)\n\nexport default NewPersonForm","import React from 'react'\n\nconst NameFilter = ({value, changeValue}) => (\n  <div>\n    Rajaa: <input value={value} onChange={changeValue} />\n  </div>\n)\n\nexport default NameFilter","import React from 'react'\n\nconst Notification = ({message, type}) => {\n  if (message === null) {\n    return null\n  }\n\n  let style = {\n    color: 'black',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (type === 'error')\n    style = { ...style, color: 'red' }\n  else if (type === 'success')\n    style = { ...style, color: 'green' }\n\n  return (\n    <div style={style}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => axios.get(baseUrl).then(response => response.data)\nconst create = newObject => axios.post(baseUrl, newObject).then(response => response.data)\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './Persons'\nimport NewPersonForm from './NewPersonForm'\nimport NameFilter from './NameFilter'\nimport Notification from './Notification'\nimport phoneBookService from '../../services/phonebook'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  useEffect(() => {\n    phoneBookService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const pushMessage = (msg, timeoutMs=3000) => {\n    setMessage(msg)\n    setTimeout(() => setMessage(null), timeoutMs)\n  }\n\n  const pushError = (err, timeoutMs=3000) => {\n    setError(err)\n    setTimeout(() => setError(null), timeoutMs)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (newName === '' || newNumber === '') {\n      pushError('Anna sekä nimi että puhelinnumero')\n      return\n    }\n    \n    // Update existing person information\n    const person = persons.find((person) => person.name === newName)\n    if (person) {\n      if (window.confirm(`'${newName}' on puhelinluettelossa jo, korvataanko vanha numero uudella?`)) {\n        const changedPerson = { ...person, number: newNumber }\n        const id = changedPerson.id\n        phoneBookService\n          .update(id, changedPerson)\n          .then(returnedPerson => {\n            pushMessage(`Numero vaihdettu henkilöllä ${returnedPerson.name}`)\n            setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n          })\n          .catch(error => {\n            pushError(`Henkilö '${person.name}' on jo valitettavasti poistettu palvelimelta`)\n            setPersons(persons.filter(p => p.id !== id))\n          })\n      }\n      return\n    }\n\n    // Add new person\n    const personObj = { name: newName, number: newNumber }\n    phoneBookService\n      .create(personObj)\n      .then(returnedPerson => {\n        pushMessage(`Lisätty ${returnedPerson.name}`)\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const removePersonById = id => {\n    phoneBookService\n      .remove(id)\n      .then(() => {\n        const personsCopy = persons.slice()\n        const person = personsCopy.find(p => p.id === id)\n        const idx = personsCopy.indexOf(person)\n        personsCopy.splice(idx, 1)\n        setPersons(personsCopy)\n        pushMessage(`Poistettu ${person.name}`)\n      })\n      .catch(error => pushError('Henkilö on jo poistettu'))\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleNameFilterChange = (event) => setNameFilter(event.target.value)\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Notification message={error} type='error' />\n      <Notification message={message} type='success' />\n      <NameFilter value={nameFilter} changeValue={handleNameFilterChange} />\n      <NewPersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <Persons\n        persons={persons.filter(p => p.name.toLowerCase().includes(nameFilter.toLowerCase()))}\n        removePersonById={removePersonById}\n        />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/PhoneBook/App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}